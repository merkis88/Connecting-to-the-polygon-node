import asyncio
import logging

from aiogram import Bot, Dispatcher, types
from aiogram.filters.command import Command

# üëá –í–ê–® –ò–ú–ü–û–†–¢ - –í–°–Å –ü–†–ê–í–ò–õ–¨–ù–û
from config.config import BOT_TOKEN

print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω... –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞: ...{BOT_TOKEN[-6:]}")

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# ‚úÖ –°–†–ê–ó–£ –ò–°–ü–û–õ–¨–ó–£–ï–ú –ò–ú–ü–û–†–¢–ò–†–û–í–ê–ù–ù–´–ô –¢–û–ö–ï–ù
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    """
    –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–º–∞–Ω–¥—É `/start`
    """
    await message.reply("–ü—Ä–∏–≤–µ—Ç!\n–Ø —Ç–≤–æ–π –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ—à–µ–ª—å–∫–æ–≤ Arbitrum.\n–ü–æ–∫–∞ —è —Ç–æ–ª—å–∫–æ —É—á—É—Å—å –æ—Ç–≤–µ—á–∞—Ç—å.")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())